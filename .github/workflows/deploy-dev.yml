name: Deploy master
on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      working-directory: ./BackEnd

    steps:
      - name: Read secrets from AWS Secrets Manager into environment variables
        uses: abhilash1in/aws-secrets-manager-action@v1.1.0
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ACCESS_KEY_SECRET }}
          aws-region: ap-northeast-2
          secrets: |
            everyone-s-delivery-mysql-database-1
          parse-json: false

      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: "8"
          distribution: "adopt"
          cache: maven
      # Caching dependencies
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Build
      - name: Build with Maven
        run: mvn -Dmaven.test.skip=true -B package --file pom.xml
        working-directory: ${{ env.working-directory }}

      # 전송할 파일을 담을 디렉토리 생성
      - name: Make Directory for deliver
        run: mkdir deploy && cp target/*.jar deploy/ && cp appspec.yml deploy/ && cp script/deploy.sh deploy/
        working-directory: ${{ env.working-directory }}

      # 압축
      - name: Make zip file
        run: zip -r -qq -j jarZipFile.zip deploy
        working-directory: ${{ env.working-directory }}

      # AWS 인증
      - name: AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_DEPLOY }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_KEY_DEPLOY }}
          aws-region: ap-northeast-2

      # S3에 빌드된 파일 업로드
      - name: Upload to AWS S3
        run: aws s3 cp --region ap-northeast-2 jarZipFile.zip s3://everyone-s-delivery/deploy/master/jarZipFile.zip
        working-directory: ${{ env.working-directory }}

      # Deploy
      - name: Code Deploy
        run: aws deploy create-deployment --application-name everyone-s-delivery-deploy --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name eveyone-s-delivery-delpoy-group --s3-location bucket=everyone-s-delivery,bundleType=zip,key=deploy/master/jarZipFile.zip
        working-directory: ${{ env.working-directory }}
